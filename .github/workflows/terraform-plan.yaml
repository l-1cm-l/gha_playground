# terraform-plan.yaml
name: Terraform Plan
run-name: Terraform Plan by @${{ github.actor }}

on: [push]

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  PROJECT_ID: dev-ss-444303
  PROJECT_NUMBER: 1049987498512
  TERRAFORM_VERSION: "1.10.1"
  CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE: /home/runner/work/gha_playground/gha_playground/gha-creds-346ea605e6964885.json
  GOOGLE_APPLICATION_CREDENTIALS: /home/runner/work/gha_playground/gha_playground/gha-creds-346ea605e6964885.json
  GOOGLE_GHA_CREDS_PATH: /home/runner/work/gha_playground/gha_playground/gha-creds-346ea605e6964885.json
  CLOUDSDK_CORE_PROJECT: dev-ss-444303
  CLOUDSDK_PROJECT: dev-ss-444303
  GCLOUD_PROJECT: dev-ss-444303
  GCP_PROJECT: dev-ss-444303
  GOOGLE_CLOUD_PROJECT: dev-ss-444303

jobs:
  terraform-plan:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/1049987498512/locations/global/workloadIdentityPools/github-actions-pool/providers/github"
          service_account: 'github-actions@dev-ss-444303.iam.gserviceaccount.com'

      - name: Set up Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y terraform
        shell: /usr/bin/bash -e {0}
        env:
          PROJECT_ID: dev-ss-444303
          PROJECT_NUMBER: 1049987498512
          TERRAFORM_VERSION: 1.10.1
          CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE: /home/runner/work/gha_playground/gha_playground/gha-creds-714a39e774104c89.json
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/work/gha_playground/gha_playground/gha-creds-714a39e774104c89.json
          GOOGLE_GHA_CREDS_PATH: /home/runner/work/gha_playground/gha_playground/gha-creds-714a39e774104c89.json
          CLOUDSDK_CORE_PROJECT: dev-ss-444303
          CLOUDSDK_PROJECT: dev-ss-444303
          GCLOUD_PROJECT: dev-ss-444303
          GCP_PROJECT: dev-ss-444303
          GOOGLE_CLOUD_PROJECT: dev-ss-444303
          
      - name: Initialize Terraform
        run: terraform init
        shell: /usr/bin/bash -e {0}
          
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          PROJECT_ID: dev-ss-444303
          PROJECT_NUMBER: 1049987498512
          TERRAFORM_VERSION: 1.10.1
          CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE: /home/runner/work/gha_playground/gha_playground/gha-creds-7d777831daee8be0.json
          GOOGLE_APPLICATION_CREDENTIALS: /home/runner/work/gha_playground/gha_playground/gha-creds-7d777831daee8be0.json
          GOOGLE_GHA_CREDS_PATH: /home/runner/work/gha_playground/gha_playground/gha-creds-7d777831daee8be0.json
          CLOUDSDK_CORE_PROJECT: dev-ss-444303
          CLOUDSDK_PROJECT: dev-ss-444303
          GCLOUD_PROJECT: dev-ss-444303
          GCP_PROJECT: dev-ss-444303
          GOOGLE_CLOUD_PROJECT: dev-ss-444303

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Terraform Format and Style')
            })
      
            // 2. Prepare format of the comment
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
      
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
      
            </details>
      
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
      
            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }