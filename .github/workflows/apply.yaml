name: terraform-apply

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  apply:
    name: Terraform Apply
    environment: production
    runs-on: ubuntu-latest
    env:
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
            
      - name: Restore Terraform cache
        id: terraform-cache
        uses: actions/cache@v3
        with:
          path: .terraform
          key: ${{ runner.os }}-terraform-${hashFiles('**/terraform.lock.hcl')}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
          role-session-name: GitHubActionsSession
    
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true
          universe: googleapis.com
          cleanup_credentials: true
          access_token_lifetime: 3600s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform
          id_token_include_email: false
    
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.3"

      - name: Terraform Init
        id: init
        run: terraform init -upgrade=true
    
      - name: Terraform Apply
        run: terraform apply -auto-approve
